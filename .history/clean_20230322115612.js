'strict mode';

const budget = Object.freeze([
  { value: 250, description: 'Sold old TV üì∫', user: 'jonas' },
  { value: -45, description: 'Groceries ü•ë', user: 'jonas' },
  { value: 3500, description: 'Monthly salary üë©‚Äçüíª', user: 'jonas' },
  { value: 300, description: 'Freelancing üë©‚Äçüíª', user: 'jonas' },
  { value: -1100, description: 'New iPhone üì±', user: 'jonas' },
  { value: -20, description: 'Candy üç≠', user: 'matilda' },
  { value: -125, description: 'Toys üöÇ', user: 'matilda' },
  { value: -1800, description: 'New Laptop üíª', user: 'jonas' },
]);

const spendingLimits = Object.freeze({
  jonas: 1500,
  matilda: 100,
});
// spendingLimits.jay = 200;

// const limit = spendingLimits?.[user] ?? 0; // –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤–Ω–∏–∑—É
// const limit = spendingLimits[user] ? spendingLimits[user] : 0;

// –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
const getLimit = user => spendingLimits?.[user] ?? 0; // Optional chaining –∏ Nullish coalescing operator (??): –ï—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ spendingLimits –µ—Å—Ç—å —Ç–∞–∫–æ–π user, —Ç–æ –æ–Ω —Ç–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, –∏–Ω–∞—á–µ –≤ 0.

const addExpense = function (
  state,
  limits,
  value,
  description,
  user = 'jonas'
) {
  const cleanUser = user.toLowerCase();

  if (value <= getLimit(cleanUser)) {
    budget.push({ value: -value, description, user: cleanUser });
  }
};
addExpense(budget, spendingLimits, 10, 'Pizza üçï');
addExpense(budget, spendingLimits, 100, 'Going to movies üçø', 'Matilda');
addExpense(budget, spendingLimits, 200, 'Stuff', 'Jay');

const checkExpenses = function () {
  for (const entry of budget)
    if (entry.value < -getLimit(entry.user)) entry.flag = 'limit';
};
checkExpenses();

const logBigExpenses = function (bigLimit) {
  let output = '';
  for (const entry of budget)
    output +=
      entry.value <= -bigLimit ? `${entry.description.slice(-2)} / ` : ''; // Emojis are 2 chars

  output = output.slice(0, -2); // Remove last '/ '
  console.log(output);
};
console.log(budget);
logBigExpenses(500);

// –ú–µ—Ç–æ–¥ Object.freeze() –∑–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç: —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –æ–Ω –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –∫ –æ–±—ä–µ–∫—Ç—É, —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–≤–æ–π—Å—Ç–≤ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º–æ—Å—Ç–∏, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ—Å—Ç–∏ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º–æ—Å—Ç–∏. –í —Å—É—â–Ω–æ—Å—Ç–∏, –æ–±—ä–µ–∫—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º. –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç.
